// value_reference.cpp

// C++ 코드입니다. C++을 모르시는 분들도, 개념만 잘 알아두세요
// => 교재 27page 참고
struct Point
{
	int x, y;
};

int main()
{
	Point pt;	// stack 에 객체 생성
			
	Point* p1 = new Point;	// Point 객체 자체는 heap 에 생성
							// p1 은 스택에 있는데.
							// p1 에는 힙에 있는 객체의 주소 보관

}
// stack 특징
// 1. 순차적으로 사용됩니다.
// 2. 생성된 역순으로 파괴 됩니다.
//    사용자가 마음대로 파괴 할수 없습니다. 규칙이 있습니다.
// 3. 크기가 작습니다.(보통 1MB)
// 4. 할당/해지가 빠릅니다.

// heap 특징
// 1. 크기가 큽니다. 자동 증가 기능있음
// 2. 원할때 할당하고, 원할때 지울수 있습니다.
// 3. 단, 할당해지는 느립니다.

// C++
// => 타입의 설계자가 아닌 
// => 타입의 사용자가 메모리 위치를 지정합니다.

// 그런데, 타입의 크기는 누가 알고 있을까요 ?

// C#/java/Swift 
// => 타입의 설계자가 메모리 위치를 지정
// struct : value type,    객체 생성시 stack 에 놓이게 됩니다.
// class  : reference type 객체 생성시 heap 에 놓이게 됩니다

// Python
// => 쉽게하자!!
// => 모든 것은 힙에 있다!!